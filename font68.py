#import codecs
#
#class Codec(codecs.Codec):
#	def encode(self,input,errors='strict'):
#		return codecs.charmap_encode(input,errors,font68)
#	def decode(self, input, errors='strict'):
#		raise NotImplementedError
#
#class IncrementalEncoder(codecs.IncrementalEncoder):
#	def encode(self, input, final=False):
#		return codecs.charmap_encode(input,errors,font68)[0]
#
#def getregentry():
#	return codecs.CodecInfo(
#	 name='font68',
#	 encode=Codec.encode,
#	 incrementalencoder=IncrementalEncoder,
#	)

def f68enc(s, bold=False):
	#TODO ascii is the wrong codec for this
	# as evidenced by the high bytes with the umlauts,etc
	if not bold:
		return b''.join(
		 font68[c] for c in s.encode('ascii')
		)
	else:
		return b''.join(
		 font68_bold[c] for c in s.encode('ascii')
		)

font68 = {
  0x0d: b'\x00\x00\x00\x00\x00\x00',
  0x20: b'\x00\x00\x00\x00\x00\x00',
  0x21: b'\x00\x00\x00\xf2\x00\x00',
  0x22: b'\x00\x00\xe0\x00\xe0\x00',
  0x23: b'\x00(\xfe(\xfe(',
  0x24: b'\x00$T\xfeTH',
  0x25: b'\x00\xc4\xc8\x10&F',
  0x26: b'\x00l\x92\xaaD\n',
  0x27: b'\x00\x00\xa0\xc0\x00\x00',
  0x28: b'\x00\x008D\x82\x00',
  0x29: b'\x00\x00\x82D8\x00',
  0x2a: b'\x00(\x10|\x10(',
  0x2b: b'\x00\x10\x10|\x10\x10',
  0x2c: b'\x00\x00\n\x0c\x00\x00',
  0x2d: b'\x00\x10\x10\x10\x10\x10',
  0x2e: b'\x00\x00\x06\x06\x00\x00',
  0x2f: b'\x00\x04\x08\x10 @',
  0x30: b'\x00|\x8a\x92\xa2|',
  0x31: b'\x00\x00B\xfe\x02\x00',
  0x32: b'\x00B\x86\x8a\x92b',
  0x33: b'\x00\x84\x82\xa2\xd2\x8c',
  0x34: b'\x00\x18(H\xfe\x08',
  0x35: b'\x00\xf4\x92\x92\x92\x8c',
  0x36: b'\x00<R\x92\x92\x0c',
  0x37: b'\x00\x80\x8e\x90\xa0\xc0',
  0x38: b'\x00l\x92\x92\x92l',
  0x39: b'\x00`\x92\x92\x94x',
  0x3a: b'\x00\x00ll\x00\x00',
  0x3b: b'\x00\x00jl\x00\x00',
  0x3c: b'\x00\x10(D\x82\x00',
  0x3d: b'\x00(((((',
  0x3e: b'\x00\x82D(\x10\x00',
  0x3f: b'\x00@\x80\x8a\x90`',
  0x40: b'\x00L\x92\x9e\x82|',
  0x41: b'\x00~\x88\x88\x88~',
  0x42: b'\x00\xfe\x92\x92\x92l',
  0x43: b'\x00|\x82\x82\x82D',
  0x44: b'\x00\xfe\x82\x82D8',
  0x45: b'\x00\xfe\x92\x92\x92\x82',
  0x46: b'\x00\xfe\x90\x90\x90\x80',
  0x47: b'\x00|\x82\x92\x92^',
  0x48: b'\x00\xfe\x10\x10\x10\xfe',
  0x49: b'\x00\x00\x82\xfe\x82\x00',
  0x4a: b'\x00\x04\x02\x82\xfc\x80',
  0x4b: b'\x00\xfe\x10(D\x82',
  0x4c: b'\x00\xfe\x02\x02\x02\x02',
  0x4d: b'\x00\xfe@0@\xfe',
  0x4e: b'\x00\xfe \x10\x08\xfe',
  0x4f: b'\x00|\x82\x82\x82|',
  0x50: b'\x00\xfe\x90\x90\x90`',
  0x51: b'\x00|\x82\x8a\x84z',
  0x52: b'\x00\xfe\x90\x98\x94b',
  0x53: b'\x00b\x92\x92\x92\x8c',
  0x54: b'\x00\x80\x80\xfe\x80\x80',
  0x55: b'\x00\xfc\x02\x02\x02\xfc',
  0x56: b'\x00\xf8\x04\x02\x04\xf8',
  0x57: b'\x00\xfc\x02\x1c\x02\xfc',
  0x58: b'\x00\xc6(\x10(\xc6',
  0x59: b'\x00\xe0\x10\x0e\x10\xe0',
  0x5a: b'\x00\x86\x8a\x92\xa2\xc2',
  0x5b: b'\x00\x00\xfe\x82\x82\x00',
  0x5c: b'\x00\xa8h>h\xa8',
  0x5d: b'\x00\x00\x82\x82\xfe\x00',
  0x5e: b'\x00 @\x80@ ',
  0x5f: b'\x00\x02\x02\x02\x02\x02',
  0x60: b'\x00\x00\x80@ \x00',
  0x61: b'\x00\x04***\x1e',
  0x62: b'\x00\xfe\x12""\x1c',
  0x63: b'\x00\x1c"""\x04',
  0x64: b'\x00\x1c""\x12\xfe',
  0x65: b'\x00\x1c***\x18',
  0x66: b'\x00\x10~\x90\x80@',
  0x67: b'\x00\x18%%%>',
  0x68: b'\x00\xfe\x10  \x1e',
  0x69: b'\x00\x00"\xbe\x02\x00',
  0x6a: b'\x00\x04\x02"\xbc\x00',
  0x6b: b'\x00\x00\xfe\x08\x14"',
  0x6c: b'\x00\x00\x82\xfe\x02\x00',
  0x6d: b'\x00> \x18 \x1e',
  0x6e: b'\x00>   \x1e',
  0x6f: b'\x00\x1c"""\x1c',
  0x70: b'\x00?$$$\x18',
  0x71: b'\x00\x18$$\x14?',
  0x72: b'\x00>\x10  \x10',
  0x73: b'\x00\x12***\x04',
  0x74: b'\x00 \xfc"\x02\x04',
  0x75: b'\x00<\x02\x02\x04>',
  0x76: b'\x008\x04\x02\x048',
  0x77: b'\x00<\x02\x04\x02<',
  0x78: b'\x00"\x14\x08\x14"',
  0x79: b'\x000\n\n\n<',
  0x7a: b'\x00"&*2"',
  0x7b: b'\x00\x00\x10l\x82\x00',
  0x7c: b'\x00\x00\x00\xfe\x00\x00',
  0x7d: b'\x00\x00\x82l\x10\x00',
  0x7e: b'\x00\x10\x10T8\x10',
  0x7f: b'\x00\x108T\x10\x10',
  0xb0: b'\x00\x00\xe0\xa0\xe0\x00',
  0xe1: b'\x00\x04\xaa*\xaa\x1e',
  0xe2: b'\x00~\xa0\xa4\xa4X',
  0xef: b'\x00\x1c\xa2"\xa2\x1c',
}

font68_bold = {
  0x0d: b'\x00\x00\x00\x00\x00\x00',
  0x20: b'\x00\x00\x00\x00\x00\x00',
  0x21: b'\x00\x00\xf2\xf2\x00\x00',
  0x22: b'\x00\xe0\xe0\x00\xe0\xe0',
  0x23: b'\x00(\xfe(\xfe(',
  0x24: b'\x00$T\xfeTH',
  0x25: b'\x04\xcc\xd80fF',
  0x26: b'\x00l\xfe\x9adn',
  0x27: b'\x00 \xe0\xc0\x00\x00',
  0x28: b'\x008|\xc6\x82\x00',
  0x29: b'\x00\x82\xc6|8\x00',
  0x2a: b'\x00(\x10|\x10(',
  0x2b: b'\x00\x10||\x10\x00',
  0x2c: b'\x00\x00\x02\x0e\x0c\x00',
  0x2d: b'\x00\x10\x10\x10\x10\x10',
  0x2e: b'\x00\x00\x06\x06\x00\x00',
  0x2f: b'\x04\x0c\x180`@',
  0x30: b'\x00|\xfe\x82\xfe|',
  0x31: b'\x00\x00B\xfe\xfe\x02',
  0x32: b'\x00F\xce\x9a\xf2b',
  0x33: b'\x00\x84\x86\xa2\xfe\xdc',
  0x34: b'\x00\x188h\xde\x9e',
  0x35: b'\x00\xf4\xf6\x92\x9e\x8c',
  0x36: b'\x00<~\xd2\x9e\x0c',
  0x37: b'\x00\x80\x9e\xbe\xe0\xc0',
  0x38: b'\x00l\xfe\x92\xfel',
  0x39: b'\x00b\xf2\x96\xfcx',
  0x3a: b'\x00\x00ll\x00\x00',
  0x3b: b'\x00\x02nl\x00\x00',
  0x3c: b'\x00\x108l\xc6\x82',
  0x3d: b'\x00(((((',
  0x3e: b'\x00\x82\xc6l8\x10',
  0x3f: b'\x00@\xca\x9a\xf0`',
  0x40: b'\x00L\xde\x82\xfe|',
  0x41: b'\x00~\xfe\x88\xfe~',
  0x42: b'\x00\xfe\xfe\x92\xfel',
  0x43: b'\x00|\xfe\x82\xc6D',
  0x44: b'\x00\xfe\xfe\xc6|8',
  0x45: b'\x00\xfe\xfe\x92\x92\x82',
  0x46: b'\x00\xfe\xfe\x90\x90\x80',
  0x47: b'\x00|\xfe\x82\xde^',
  0x48: b'\x00\xfe\xfe\x10\xfe\xfe',
  0x49: b'\x00\x82\xfe\xfe\x82\x00',
  0x4a: b'\x00\x04\x06\x82\xfe\xfc',
  0x4b: b'\x00\xfe\xfe8\xee\xc6',
  0x4c: b'\x00\xfe\xfe\x02\x02\x02',
  0x4d: b'\x00\xfe~0~\xfe',
  0x4e: b'\x00\xfe~\x10\xfc\xfe',
  0x4f: b'\x00|\xfe\x82\xfe|',
  0x50: b'\x00\xfe\xfe\x90\xf0`',
  0x51: b'\x00|\xfe\x82\xfcv',
  0x52: b'\x00\xfe\xfe\x98\xfef',
  0x53: b'\x00b\xf2\x92\x9e\x8c',
  0x54: b'\x80\x80\xfe\xfe\x80\x80',
  0x55: b'\x00\xfc\xfe\x02\xfe\xfc',
  0x56: b'\x00\xf8\xfc\x06\xfc\xf8',
  0x57: b'\x00\xfe\xfc\x18\xfc\xfe',
  0x58: b'\x00\xee\xfe\x10\xfe\xee',
  0x59: b'\x00\xe2\xf2\x0e\xfc\xf8',
  0x5a: b'\x00\x86\x9e\xba\xf2\xc2',
  0x5b: b'\x00\xfe\xfe\x82\x82\x00',
  0x5c: b'\x00\xa8h>h\xa8',
  0x5d: b'\x00\x00\x82\x82\xfe\xfe',
  0x5e: b'\x00 `\xc0` ',
  0x5f: b'\x00\x02\x02\x02\x02\x02',
  0x60: b'\x00\x80\xc0` \x00',
  0x61: b'\x00\x04.*>\x1e',
  0x62: b'\x00\xfe\xfe">\x1c',
  0x63: b'\x00\x1c>"6\x14',
  0x64: b'\x00\x1c>"\xfe\xfe',
  0x65: b'\x00\x1c>*:\x18',
  0x66: b'\x00\x10~\xfe\x90\x80',
  0x67: b'\x00\x18=%?>',
  0x68: b'\x00\xfe\xfe >\x1e',
  0x69: b'\x00"\xbe\xbe\x02\x00',
  0x6a: b'\x00\x04\x06"\xbe\xbc',
  0x6b: b'\x00\xfe\xfe\x08>6',
  0x6c: b'\x00\x82\xfe\xfe\x02\x00',
  0x6d: b'\x00>>\x18>\x1e',
  0x6e: b'\x00>> >\x1e',
  0x6f: b'\x00\x1c>">\x1c',
  0x70: b'\x00??$<\x18',
  0x71: b'\x00\x18<$??',
  0x72: b'\x00>>\x100 ',
  0x73: b'\x00\x12:*.$',
  0x74: b'\x00 \xfc\xfe"\x00',
  0x75: b'\x00<>\x02>>',
  0x76: b'\x008<\x06<8',
  0x77: b'\x00><\x08<>',
  0x78: b'\x006>\x08>6',
  0x79: b'\x000:\n><',
  0x7a: b'\x00&.:2"',
  0x7b: b'\x00\x10|\xee\x82\x00',
  0x7c: b'\x00\x00\xfe\xfe\x00\x00',
  0x7d: b'\x00\x00\x82\xee|\x10',
  0x7e: b'\x00\x10T|8\x10',
  0x7f: b'\x00\x108|T\x10',
  0xb0: b'\x00\xe0\xe0\xa0\xe0\xe0',
  0xe1: b'\x00\x84\xae*\xbe\x9e',
  0xe2: b'\x00~\xfe\xa4\xfcX',
  0xef: b'\x00\x9c\xbe"\xbe\x9c',
}
